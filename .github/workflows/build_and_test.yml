name: build-and-test

on:
  push:
    branches:
      - main
      - dev
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]
        shard: [1, 2, 3, 4, 5, 6]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run setup

      - name: Jest cache
        uses: actions/cache@v4
        with:
          path: /tmp/jest_rt
          key: ${{ hashFiles('**/package-lock.json') }}-${{ matrix.shard }}

      - run: npm run test -- --shard=${{ matrix.shard }}/${{ strategy.job-total }} --maxWorkers=100%

  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run setup
      - run: npm run typecheck
      - run: npm run lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run setup
      - run: npm run pack:mod

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Move build statics
        run: |
          mv target/xrf_build.log target/mod_package/xrf_build.log
          mv target/README.md target/mod_package/README.md

      - name: Archive build artifacts
        working-directory: target/mod_package
        run: zip -qq -r gamedata.release.zip gamedata/ bin/ xrf_build.log README.md

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: gamedata-release
          path: target/mod_package/gamedata.release.zip
          retention-days: 1

  upload-nightly:
    if: ${{ github.ref_name == 'dev' && github.event_name != 'pull_request' }}
    needs: [test, check, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@master
        with:
          name: gamedata-release

      - name: Update nightly tag
        uses: EndBug/latest-tag@latest
        if: github.ref_name == 'dev'
        id: update-nightly-tag
        with:
          ref: nightly

      - name: Publish nightly gamedata build
        if: ${{ steps.update-nightly-tag.outcome == 'success' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --clobber nightly gamedata.release.zip
